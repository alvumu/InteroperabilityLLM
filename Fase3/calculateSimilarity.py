from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np

# Descripciones de los recursos
descriptions = [
    {"resource": "Medication", "description":"\"The Medication resource enables the comprehensive representation of medications within healthcare systems. It serves to uniquely identify each medication through standardized codes, facilitating integration across patient records and external applications. While it includes essential details such as product names for verification, its primary function lies in linking medications to patient-specific resources and supporting robust data exchange. Unlike other resources, Medication also accommodates complex formulations, detailing precise ingredient quantities and packaging specifics, which is crucial for accurate dispensation and administration processes. This resource is pivotal in ensuring medication safety and efficacy by providing detailed compositions and packaging details, essential for varied healthcare settings. Additional information about the medication is frequently provided for human verification (e.g., the product name), but a full representation of the details of composition and efficacy of the medicine is conveyed by referring to drug dictionaries by means of the codes they define. There are some occasions where it is necessary to identify slightly more detail, such as when dispensing a package containing a particular medication requires identification both of the medicine and the package at once. There are also some occasions (e.g. custom formulations) where the composition of a medicine must be represented. In these cases, the ingredients of the medicine must be specified together with the amount contained, though the Medication resource does not provide full details. The Medication resource allows for medications to be characterized by the form of the drug and the ingredient (or ingredients), and how it is packaged. The medication will include the ingredient(s), and their strength(s) and the package can include the amount (for example, number of tablets, volume, etc.) that is contained in a particular container (for example, 100 capsules of Amoxicillin 500mg per bottle). The Medication resource can be used to describe a compounded (aka extemporaneous or magistral) product that is manufactured by the pharmacy at the time of dispensing. In this case there will be multiple ingredients which are typically base chemicals (for example, hydrocortisone powder) and there may be other ingredients that are manufactured products (for example, Glaxal Base). When a medication includes a package, further details about the composition can be provided. A package has a container (vacuum packed box, jar, etc.) and a list of the products or other packages that are in the package.\"","structure":"{\"resourceType\" : \"Medication\",\n  // from Resource: id, meta, implicitRules, and language\n  // from DomainResource: text, contained, extension, and modifierExtension\n  \"identifier\" : [{ Identifier }], // Business identifier for this medication\n  \"code\" : { CodeableConcept }, // Codes that identify this medication\n  \"status\" : \"<code>\", // active | inactive | entered-in-error\n  \"marketingAuthorizationHolder\" : { Reference(Organization) }, // Organization that has authorization to market medication\n  \"doseForm\" : { CodeableConcept }, // powder | tablets | capsule +\n  \"totalVolume\" : { Quantity }, // When the specified product code does not infer a package size, this is the specific amount of drug in the product\n  \"ingredient\" : [{ // Active or inactive ingredient\n    \"item\" : { CodeableReference(Medication|Substance) }, // R!  The ingredient (substance or medication) that the ingredient.strength relates to\n    \"isActive\" : <boolean>, // Active ingredient indicator\n    // strength[x]: Quantity of ingredient present. One of these 3:\n    \"strengthRatio\" : { Ratio },\n    \"strengthCodeableConcept\" : { CodeableConcept },\n    \"strengthQuantity\" : { Quantity }\n  }],\n  \"batch\" : { // Details about packaged medications\n    \"lotNumber\" : \"<string>\", // Identifier assigned to batch\n    \"expirationDate\" : \"<dateTime>\" // When batch will expire\n  },\n  \"definition\" : { Reference(MedicationKnowledge) } // Knowledge about this medication\n}"},
    {"resource": "MedicationRequest", "description":"\"The MedicationRequest resource encompasses all aspects of medication ordering for patients across various healthcare settings, including inpatient and community environments. It facilitates the initiation of orders for medications ranging from prescription drugs to over-the-counter treatments like aspirin, as well as nutritional supplements and total parenteral nutrition. Additionally, it supports the procurement of medication-related devices such as prefilled syringes, essential for controlled administration like patient-controlled analgesia (PCA). However, it does not cater to devices coated with medication, such as heparin-coated stents, which are managed through Device Request or SupplyRequest resources. This resource serves as a pivotal 'request' tool within FHIR workflows, allowing for the seamless ordering and transfer of medication orders between healthcare entities. It accommodates single medication requests; for workflows requiring multiple items simultaneously, multiple instances of this resource can be utilized and interconnected as needed. It also facilitates the reporting of medication requests between organizations or systems, distinguishing it from resources dedicated to non-medication items or dietary prescriptions. In summary, the MedicationRequest resource is specialized in facilitating the ordering and transfer of medication orders across healthcare settings, emphasizing its role in medication management and workflow integration. The MedicationRequest may be used to report orders/request from external systems that have been reported for informational purposes and are not authoritative and are not expected to be acted upon (e.g. dispensed or administered). The MedicationRequest resource is a 'request' resource from a FHIR workflow perspective - see Workflow Request.The MedicationRequest resource allows requesting only a single medication. If a workflow requires requesting multiple items simultaneously this is done using multiple instances of this resource. These instances can be linked in different ways depending on the needs of the workflow. The MedicationRequest resource is used to request or order medication for a subject. It may also be used to report a medication request or order from one organization or source to another. When requesting supplies or devices when there is a patient focus or instructions regarding their use, SupplyRequest or DeviceRequest should be used instead. When reporting on the usage of a medication by a patient, the MedicationStatement resource should be used.","structure":"{\"resourceType\" : \"MedicationRequest\",\n  // from Resource: id, meta, implicitRules, and language\n  // from DomainResource: text, contained, extension, and modifierExtension\n  \"identifier\" : [{ Identifier }], // External ids for this request\n  \"basedOn\" : [{ Reference(CarePlan|ImmunizationRecommendation|\n   MedicationRequest|ServiceRequest) }], // A plan or request that is fulfilled in whole or in part by this medication request\n  \"priorPrescription\" : { Reference(MedicationRequest) }, // Reference to an order/prescription that is being replaced by this MedicationRequest\n  \"groupIdentifier\" : { Identifier }, // Composite request this is part of\n  \"status\" : \"<code>\", // R!  active | on-hold | ended | stopped | completed | cancelled | entered-in-error | draft | unknown\n  \"statusReason\" : { CodeableConcept }, // Reason for current status\n  \"statusChanged\" : \"<dateTime>\", // When the status was changed\n  \"intent\" : \"<code>\", // R!  proposal | plan | order | original-order | reflex-order | filler-order | instance-order | option\n  \"category\" : [{ CodeableConcept }], // Grouping or category of medication request\n  \"priority\" : \"<code>\", // routine | urgent | asap | stat\n  \"doNotPerform\" : <boolean>, // True if patient is to stop taking or not to start taking the medication\n  \"medication\" : { CodeableReference(Medication) }, // R!  Medication to be taken\n  \"subject\" : { Reference(Group|Patient) }, // R!  Individual or group for whom the medication has been requested\n  \"informationSource\" : [{ Reference(Organization|Patient|Practitioner|\n   PractitionerRole|RelatedPerson) }], // The person or organization who provided the information about this request, if the source is someone other than the requestor\n  \"encounter\" : { Reference(Encounter) }, // Encounter created as part of encounter/admission/stay\n  \"supportingInformation\" : [{ Reference(Any) }], // Information to support fulfilling of the medication\n  \"authoredOn\" : \"<dateTime>\", // When request was initially authored\n  \"requester\" : { Reference(Device|Organization|Patient|Practitioner|\n   PractitionerRole|RelatedPerson) }, // Who/What requested the Request\n  \"reported\" : <boolean>, // Reported rather than primary record\n  \"performerType\" : { CodeableConcept }, // Desired kind of performer of the medication administration\n  \"performer\" : [{ Reference(CareTeam|DeviceDefinition|HealthcareService|\n   Organization|Patient|Practitioner|PractitionerRole|RelatedPerson) }], // Intended performer of administration\n  \"device\" : [{ CodeableReference(DeviceDefinition) }], // Intended type of device for the administration\n  \"recorder\" : { Reference(Practitioner|PractitionerRole) }, // Person who entered the request\n  \"reason\" : [{ CodeableReference(Condition|Observation) }], // Reason or indication for ordering or not ordering the medication\n  \"courseOfTherapyType\" : { CodeableConcept }, // Overall pattern of medication administration\n  \"insurance\" : [{ Reference(ClaimResponse|Coverage) }], // Associated insurance coverage\n  \"note\" : [{ Annotation }], // Information about the prescription\n  \"renderedDosageInstruction\" : \"<markdown>\", // Full representation of the dosage instructions\n  \"effectiveDosePeriod\" : { Period }, // Period over which the medication is to be taken\n  \"dosageInstruction\" : [{ Dosage }], // Specific instructions for how the medication should be taken\n  \"dispenseRequest\" : { // Medication supply authorization\n    \"initialFill\" : { // First fill details\n      \"quantity\" : { Quantity(SimpleQuantity) }, // First fill quantity\n      \"duration\" : { Duration } // First fill duration\n    },\n    \"dispenseInterval\" : { Duration }, // Minimum period of time between dispenses\n    \"validityPeriod\" : { Period }, // Time period supply is authorized for\n    \"numberOfRepeatsAllowed\" : \"<unsignedInt>\", // Number of refills authorized\n    \"quantity\" : { Quantity(SimpleQuantity) }, // Amount of medication to supply per dispense\n    \"expectedSupplyDuration\" : { Duration }, // Number of days supply per dispense\n    \"dispenser\" : { Reference(Organization) }, // Intended performer of dispense\n    \"dispenserInstruction\" : [{ Annotation }], // Additional information for the dispenser\n    \"doseAdministrationAid\" : { CodeableConcept } // Type of adherence packaging to use for the dispense\n  },\n  \"substitution\" : { // Any restrictions on medication substitution\n    // allowed[x]: Whether substitution is allowed or not. One of these 2:\n    \"allowedBoolean\" : <boolean>,\n    \"allowedCodeableConcept\" : { CodeableConcept },\n    \"reason\" : { CodeableConcept } // Why should (not) substitution be made icon\n  },\n  \"eventHistory\" : [{ Reference(Provenance) }] // A list of events of interest in the lifecycle\n}"},
    {"resource": "MedicationAdministration", "description":"The MedicationAdministration resource covers the administration of all medications. Please refer to the Immunization resource/Profile for the treatment of vaccines. It will principally be used within care settings (including inpatient) to record medication administrations, including self-administrations of oral medications, injections, intravenous infusions, etc. It can also be used in outpatient settings to record allergy shots and other non-immunization administrations. In some cases, it might be used for home-health reporting, such as recording self-administered or even device-administered insulin.\nNote: devices coated with a medication (e.g. heparin) are not typically recorded as a medication administration. However, administration of a medication via an implanted medication pump (e.g., insulin) would be recorded as a MedicationAdministration.\n\nThis resource can also be used for recording waste by setting the status to 'not-done' and the statusReason to a code that refers to waste. The remaining fields would support the waste elements, i.e. performer of the waste, quantity of medication wasted, date/time of waste, etc. It is also possible, using the partOf reference to a MedicationDispense, to indicate that this waste occurred as part of a dispense event. MedicationAdministration is intended for tracking the administration of medications. Administration of vaccines is intended to be handled using the Immunization resource. Some systems treat immunizations in the same way as any other medication administration. Such systems SHOULD use an immunization resource to represent these. However, if systems need to use a MedicationAdministration resource to capture vaccinations for workflow or other reasons, a Medication Administration resource may be used but systems SHOULD also create and expose an equivalent Immunization instance.","structure":"{\"resourceType\" : \"MedicationAdministration\",\n  // from Resource: id, meta, implicitRules, and language\n  // from DomainResource: text, contained, extension, and modifierExtension\n  \"identifier\" : [{ Identifier }], // External identifier\n  \"basedOn\" : [{ Reference(CarePlan) }], // Plan this is fulfilled by this administration\n  \"partOf\" : [{ Reference(MedicationAdministration|MedicationDispense|\n   Procedure) }], // Part of referenced event\n  \"status\" : \"<code>\", // R!  in-progress | not-done | on-hold | completed | entered-in-error | stopped | unknown\n  \"statusReason\" : [{ CodeableConcept }], // Reason administration not performed\n  \"category\" : [{ CodeableConcept }], // Type of medication administration\n  \"medication\" : { CodeableReference(Medication) }, // R!  What was administered\n  \"subject\" : { Reference(Group|Patient) }, // R!  Who received medication\n  \"encounter\" : { Reference(Encounter) }, // Encounter administered as part of\n  \"supportingInformation\" : [{ Reference(Any) }], // Additional information to support administration\n  // occurence[x]: \n     Specific date/time or interval of time during which the administration took place (or did not take place). One of these 3:\n  \"occurenceDateTime\" : \"<dateTime>\",\n  \"occurencePeriod\" : { Period },\n  \"occurenceTiming\" : { Timing },\n  \"recorded\" : \"<dateTime>\", // When the MedicationAdministration was first captured in the subject's record\n  \"isSubPotent\" : <boolean>, // Full dose was not administered\n  \"subPotentReason\" : [{ CodeableConcept }], // Reason full dose was not administered\n  \"performer\" : [{ // Who or what performed the medication administration and what type of performance they did\n    \"function\" : { CodeableConcept }, // Type of performance\n    \"actor\" : { CodeableReference(Device|Patient|Practitioner|PractitionerRole|\n    RelatedPerson) } // R!  Who or what performed the medication administration\n  }],\n  \"reason\" : [{ CodeableReference(Condition|DiagnosticReport|Observation) }], // Concept, condition or observation that supports why the medication was administered\n  \"request\" : { Reference(MedicationRequest) }, // Request administration performed against\n  \"device\" : [{ CodeableReference(Device) }], // Device used to administer\n  \"note\" : [{ Annotation }], // Information about the administration\n  \"dosage\" : { // Details of how medication was taken\n    \"text\" : \"<string>\", // I Free text dosage instructions e.g. SIG\n    \"site\" : { CodeableConcept }, // Body site administered to\n    \"route\" : { CodeableConcept }, // Path of substance into body\n    \"method\" : { CodeableConcept }, // How drug was administered\n    \"dose\" : { Quantity(SimpleQuantity) }, // I Amount of medication per dose\n    // rate[x]: Dose quantity per unit of time. One of these 2:\n    \"rateRatio\" : { Ratio },\n    \"rateQuantity\" : { Quantity(SimpleQuantity) }\n  },\n  \"eventHistory\" : [{ Reference(Provenance) }] // A list of events of interest in the lifecycle\n}"},
    {"resource": "MedicationDispense", "description": "The MedicationDispense resource in the FHIR (Fast Healthcare Interoperability Resources) standard encompasses all activities related to the supply of medications to a patient. This includes a variety of scenarios such as dispensing medications for pick-up from an outpatient or community pharmacy, providing patient-specific medications from an inpatient pharmacy to a hospital ward, and issuing a single dose from ward stock directly to a patient for immediate consumption. The process of medication dispensing is typically initiated by a medication order, which a pharmacy system responds to by preparing and providing the prescribed medication to the patient. The MedicationDispense resource tracks the act of dispensing, ensuring that there is a clear record of the supply process, which includes the details of what medication was supplied, to whom, by whom, when, and in what quantity. This resource helps in maintaining an accurate history of medication provided to a patient, which is crucial for patient safety, continuity of care, and proper medication management. The objectives of the MedicationDispense resource are multi-faceted: Ensure Accurate Medication Supply: It ensures that the correct medication is supplied to the right patient in the appropriate dosage and quantity, thereby supporting the safe administration of medications. Facilitate Medication Tracking: It provides a comprehensive record that helps healthcare providers track the dispensing of medications over time, ensuring adherence to prescribed treatment plans and enabling the monitoring of medication usage. Support Clinical Decision-Making: By maintaining a detailed history of medication dispenses, healthcare professionals can make informed decisions regarding future treatment plans and adjustments to ongoing therapies. Enhance Communication and Coordination: The resource improves communication and coordination among various stakeholders, including pharmacists, doctors, nurses, and other healthcare providers, by providing a transparent and accessible record of medication dispenses. Comply with Regulations: It helps healthcare organizations comply with regulatory requirements related to medication dispensing, ensuring that all necessary documentation and reporting standards are met. Examples of the MedicationDispense resource in action include: A patient visiting an outpatient pharmacy to collect their prescribed medication. A nurse in a hospital ward receiving patient-specific medications from the inpatient pharmacy to administer to their patients. A healthcare provider issuing a single dose of medication from the ward’s stock to a patient for immediate use. Overall, the MedicationDispense resource is an integral component of the healthcare system, playing a crucial role in the safe and effective management of medication therapy, thereby contributing to better patient outcomes and enhanced healthcare delivery.", "structure": { "identifier": [ { "Identifier": {} } ], "basedOn": [ { "Reference": "CarePlan" } ], "partOf": [ { "Reference": "MedicationAdministration" }, { "Reference": "Procedure" } ], "status": "<code>", "notPerformedReason": { "CodeableReference": "DetectedIssue" }, "statusChanged": "<dateTime>", "category": [ { "CodeableConcept": {} } ], "medication": { "CodeableReference": "Medication" }, "subject": { "Reference": "Group" }, "encounter": { "Reference": "Encounter" }, "supportingInformation": [ { "Reference": "Any" } ], "performer": [ { "function": { "CodeableConcept": {} }, "actor": { "Reference": "CareTeam" } }, { "function": { "CodeableConcept": {} }, "actor": { "Reference": "Device" } }, { "function": { "CodeableConcept": {} }, "actor": { "Reference": "Organization" } }, { "function": { "CodeableConcept": {} }, "actor": { "Reference": "Patient" } }, { "function": { "CodeableConcept": {} }, "actor": { "Reference": "Practitioner" } }, { "function": { "CodeableConcept": {} }, "actor": { "Reference": "PractitionerRole" } }, { "function": { "CodeableConcept": {} }, "actor": { "Reference": "RelatedPerson" } } ], "location": { "Reference": "Location" }, "authorizingPrescription": [ { "Reference": "MedicationRequest" } ], "type": { "CodeableConcept": {} }, "quantity": { "Quantity": { "SimpleQuantity": {} } }, "daysSupply": { "Quantity": { "SimpleQuantity": {} } }, "recorded": "<dateTime>", "whenPrepared": "<dateTime>", "whenHandedOver": "<dateTime>", "destination": { "Reference": "Location" }, "receiver": [ { "Reference": "Location" }, { "Reference": "Patient" }, { "Reference": "Practitioner" }, { "Reference": "PractitionerRole" }, { "Reference": "RelatedPerson" } ], "note": [ { "Annotation": {} } ], "renderedDosageInstruction": "<markdown>", "dosageInstruction": [ { "Dosage": {} } ], "substitution": { "wasSubstituted": "true", "type": { "CodeableConcept": {} }, "reason": [ { "CodeableConcept": {} } ], "responsibleParty": { "Reference": "Organization" } }, "eventHistory": [ { "Reference": "Provenance" } ] } }
]

# Extraer las descripciones
descriptions_text = [desc["description"] for desc in descriptions]

# Crear el vectorizador TF-IDF
vectorizer = TfidfVectorizer()

# Transformar las descripciones en una matriz TF-IDF
tfidf_matrix = vectorizer.fit_transform(descriptions_text).toarray().astype(np.float32)

# Calcular la matriz de similitud del coseno
similarity_matrix = cosine_similarity(tfidf_matrix)

# Crear un diccionario para almacenar las similitudes
similarity_dict = {}
for i in range(len(descriptions)):
    similarity_dict[i] = {}
    for j in range(len(descriptions)):
        if i != j:
            similarity_dict[i][j] = similarity_matrix[i][j]

# Imprimir la matriz de similitud
print("Matriz de Similitud:")
for i in similarity_dict:
    for j in similarity_dict[i]:
        print(f"Similitud entre descripción {i} y {j}: {similarity_dict[i][j]:.4f}")

# Para visualizar mejor la matriz de similitud, puedes convertirla en un DataFrame
import pandas as pd
similarity_df = pd.DataFrame(similarity_matrix, columns=[desc["resource"] for desc in descriptions], index=[desc["resource"] for desc in descriptions])
print("\nMatriz de Similitud (DataFrame):")
print(similarity_df)
